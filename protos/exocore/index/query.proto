syntax = "proto3";

package exocore.index;

import "exocore/index/entity.proto";
import "google/protobuf/timestamp.proto";

message EntityQuery {
    oneof predicate {
        MatchPredicate match = 1;
        TraitPredicate trait = 2;
        IdPredicate id = 3;
        ReferencePredicate reference = 4;

        TestPredicate test = 99;
    }

    /// Query paging requested
    Paging paging = 5;

    /// Query sorting
    Sorting sorting = 6;

    /// If true, only return summary
    bool summary = 7;

    /// Optional watch token if this query is to be used for watching.
    uint64 watch_token = 8;

    /// If specified, if results from server matches this hash, only a summary will be returned.
    uint64 result_hash = 9;
}

message MatchPredicate {
    string query = 1;
}

message IdPredicate {
    string id = 1;
}

message TestPredicate {
    bool success = 1;
}

message TraitPredicate {
    string trait_name = 1;

    TraitQuery query = 2;
}

message TraitQuery {
    oneof query {
        ReferencePredicate reference = 1;
        MatchPredicate match = 2;
        TraitFieldPredicate field = 3;
    }
}

message TraitFieldPredicate {
    string field = 1;

    oneof value {
        string string = 2;
        int64 int64 = 3;
        uint64 uint64 = 4;
        google.protobuf.Timestamp date = 5;
    }

    Operator operatior = 6;

    enum Operator {
        EQUAL = 0;
        GT = 1;
        GTE = 2;
        LT = 3;
        LTE = 4;
    }
}

message ReferencePredicate {
    // Entity id the reference points to
    string entity_id = 1;

    // Optional trait id the reference points to
    string trait_id = 2;
}

message Paging {
    /// Returns results after token.
    string after_token = 1;

    /// Returns results before token.
    string before_token = 2;

    /// Desired results count. Default if 0.
    uint32 count = 3;
}

message Sorting {
    oneof value {
        bool score = 1;
        bool operation_id = 2;
        string field = 3;
    }

    bool ascending = 4;
}

message EntityResults {

    repeated EntityResult entities = 1;

    bool summary = 2;

    uint32 estimated_count = 3;

    Paging current_page = 4;

    Paging next_page = 5;

    uint64 hash = 6;

}

message EntityResult {
    Entity entity = 1;

    EntityResultSource source = 2;

    string sort_token = 3;
}

enum EntityResultSource {
    UNKNOWN = 0;
    PENDING = 1;
    CHAIN = 2;
}
