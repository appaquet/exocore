syntax = "proto3";

package exocore.index;

import "exocore/index/entity.proto";

message EntityQuery {
    oneof predicate {
        MatchPredicate match = 1;
        TraitPredicate trait = 2;
        IdPredicate id = 3;
        TestPredicate test = 99;
    }

    Paging paging = 5;

    /// If true, only return summary
    bool summary = 6;

    /// Optional watch token if this query is to be used for watching.
    uint64 watch_token = 7;

    /// If specified, if results from server matches this hash, only a summary will be returned.
    uint64 result_hash = 8;
}

message MatchPredicate {
    string query = 1;
}

message IdPredicate {
    string id = 1;
}

message TestPredicate {
    bool success = 1;
}

message TraitPredicate {
    string trait_name = 1;

    TraitQuery query = 2;
}

message TraitQuery {
}

message Paging {
    /// Returns results after token.
    string after_token = 1;

    /// Returns results before token.
    string before_token = 2;

    /// Desired results count. Default if 0.
    uint32 count = 3;
}

message EntityResults {

    repeated EntityResult entities = 1;

    bool summary = 2;

    uint32 estimated_count = 3;

    Paging current_page = 4;

    Paging next_page = 5;

    uint64 hash = 6;

}

message EntityResult {
    Entity entity = 1;

    EntityResultSource source = 2;

    string sort_token = 3;
}

enum EntityResultSource {
    UNKNOWN = 0;
    PENDING = 1;
    CHAIN = 2;
}
