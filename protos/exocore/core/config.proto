syntax = "proto3";

package exocore.core;

import "exocore/apps/manifest.proto";

message LocalNodeConfig {
    string keypair = 1;

    string public_key = 2;

    string name = 3;

    string id = 4;

    string path = 5;

    NodeAddresses addresses = 6;

    repeated NodeCellConfig cells = 7;

    NodeStoreConfig store = 8;
}

message NodeAddresses {
    repeated string p2p = 1;

    repeated string http = 2;
}

message NodeCellConfig {
    oneof location {
       CellConfig inline = 1;
       string path = 2;
    }
}

message NodeStoreConfig {
    EntityIndexConfig index = 1;
}

/// Configuration of the entities index
message EntityIndexConfig {
    /// What is the minimum depth that a block needs to be the chain to be
    /// indexed. This is required to lower the odds that we are going to
    /// revert the block if our local chain forked.
    ///
    /// `CommitManagerConfig`.`operations_cleanup_after_block_depth`
    uint64 chain_index_min_depth = 1;

    /// If specified, prevent indexing every new block on each commit.
    /// Operations will be kept in pending index for a bit longer and
    /// preventing the costly chain index modification.
    uint64 chain_index_depth_leeway = 2;

     /// Configuration for the in-memory traits index that are in the pending
    /// store
    MutationIndexConfig pending_index = 3;

    /// Configuration for the persisted traits index that are in the chain
    MutationIndexConfig chain_index = 4;
}

/// Trait index configuration
message MutationIndexConfig {        
    uint32 indexer_num_threads = 1;
    uint32 indexer_heap_size_bytes = 2;

    uint32 iterator_page_size = 3;
    uint32 iterator_max_pages = 4;

    uint32 entity_mutations_cache_size = 5;
}

message CellConfig {
    string public_key = 1;

    string keypair = 2;

    string name = 3;

    string id = 4;

    string path = 5;

    repeated CellNodeConfig nodes = 6;

    repeated CellApplicationConfig apps = 7;
}

message CellNodeConfig {
    NodeConfig node = 1;

    repeated Role roles = 2;

    enum Role {
        INVALID_ROLE = 0;
        CHAIN_ROLE = 1;
        STORE_ROLE = 2;
    }
}

message NodeConfig {
    string public_key = 1;

    string name = 2;

    string id = 3;

    NodeAddresses addresses = 4;
}

message CellApplicationConfig {
    oneof location {
        exocore.apps.Manifest inline = 1;
        string path = 2;
    }
}