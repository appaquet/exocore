on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:    
      - 'gha-release'

name: Release
jobs:
  exo_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["armv7-unknown-linux-gnueabihf", "x86_64-unknown-linux-gnu"]
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p exo --target ${{ matrix.target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.0
        with:
          name: ${{ matrix.target }}-artifact
          path: target/${{ matrix.target }}/debug/exo

  exo_macos:
    runs-on: macOS-latest
    strategy:
      matrix:
        target: ["x86_64-apple-darwin"]
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p exo --target ${{ matrix.target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.0
        with:
          name: ${{ matrix.target }}-artifact
          path: target/${{ matrix.target }}/debug/exo

  exo_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: ["x86_64-pc-windows-msvc"]
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p exo --target ${{ matrix.target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.0
        with:
          name: ${{ matrix.target }}-artifact
          path: target/${{ matrix.target }}/debug/exo

  commit_artifacts:
    runs-on: ubuntu-latest
    needs: [exo_linux]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Download armv7-unknown-linux-gnueabihf artifact
        uses: actions/download-artifact@v2
        with:
          name: armv7-unknown-linux-gnueabihf-artifact
          path: target/armv7-unknown-linux-gnueabihf/debug/exo

      - name: Download x86_64-unknown-linux-gnu artifact
        uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-gnu-artifact
          path: target/x86_64-unknown-linux-gnu/debug/exo

      - name: Download x86_64-apple-darwin artifact
        uses: actions/download-artifact@v2
        with:
          name: x86_64-apple-darwin-artifact
          path: target/x86_64-apple-darwin/debug/exo

      - name: Download x86_64-pc-windows-msvc artifact
        uses: actions/download-artifact@v2
        with:
          name: x86_64-pc-windows-msvc-artifact
          path: target/x86_64-pc-windows-msvc/debug/exo

      - name: List artifacts
        run: |
          ls -R target/*/debug/exo

  # build:
  #   name: Upload Release Asset
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Build project # This would actually build your project, using zip for an example artifact
  #       run: |
  #         zip --junk-paths my-artifact README.md
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         draft: false
  #         prerelease: false
  #     - name: Upload Release Asset
  #       id: upload-release-asset 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
  #         asset_path: ./my-artifact.zip
  #         asset_name: my-artifact.zip
  #         asset_content_type: application/zip