name: Release build

on:
  push:
    tags:
      - 'v0.*'
      - 'v1.*'
    branches:    
      - gha-release

jobs:
  exo:
    strategy:
      fail-fast: true
      matrix:
        pair:
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
            bin: exo
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin: exo
          - target: x86_64-apple-darwin
            os: macOS-latest
            bin: exo
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: exo.exe

    runs-on: ${{ matrix.pair.os }}

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.pair.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: -p exo --release --target ${{ matrix.pair.target }}

      - name: Create binary
        run: |
          mkdir archive
          cp target/${{ matrix.pair.target }}/release/${{ matrix.pair.bin }} archive
          cd archive/
          tar -czf ../exo.${{ matrix.pair.target }}.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ matrix.pair.target }}-artifact
          path: exo.${{ matrix.pair.target }}.tar.gz

  web_client:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -yq libssl-dev openssl protobuf-compiler

          curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1/wasm-pack-v0.9.1-x86_64-unknown-linux-musl.tar.gz | tar zxf -
          mv wasm-pack*/wasm-pack .
          echo `pwd` >> $GITHUB_PATH

          sudo npm install -g yarn

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: wasm32-unknown-unknown

      - name: Build client
        run: |
          yarn build
          yarn pack
          mv exocore-v*.tgz exocore-web.tar.gz

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: client-web-artifact
          path: exocore-web.tar.gz

  ios_client:
    runs-on: macOS-latest # See https://github.com/actions/virtual-environments/blob/main/images/macos for versions
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install cargo-lipo
        run: |
          brew install swift-protobuf
          rustup target add aarch64-apple-ios x86_64-apple-ios # actions-rs don't support multiple targets: https://github.com/actions-rs/toolchain/issues/16
          cargo install cargo-lipo

      - name: Build client & pod
        run: |
          cd $GITHUB_WORKSPACE/clients/ios
          ./tools/generate.sh
          ./tools/build.sh release

          cd $GITHUB_WORKSPACE
          mkdir archive
          mkdir -p archive/clients/
          cp -r clients/ios archive/clients/
          cp Exocore.podspec archive/
          cd archive/
          tar -czf $GITHUB_WORKSPACE/exocore-ios.tar.gz *

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: client-ios-artifact
          path: exocore-ios.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [exo, web_client, ios_client]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: List artifacts
        run: |
          ls -R artifacts/**/*

      - name: Create release with artifacts
        run: |
          set -x

          assets=()
          for asset in ./artifacts/*/*.tar.gz; do
            assets+=("-a" "$asset")
          done

          TAG="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" --draft --message "$TAG" "$TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

