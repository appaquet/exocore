name: Push tester

on:
  push:
    branches:    
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  rust_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy & check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features


  rust_tests:
    strategy:
      fail-fast: true
      matrix:
        pair:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macOS-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.pair.os }}

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: Swatinem/rust-cache@v1

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features


  rust_tests_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-10-17
          profile: minimal

      - uses: Swatinem/rust-cache@v1

      - name: Install grcov
        run: |
          curl -L https://github.com/mozilla/grcov/releases/download/v0.5.9/grcov-linux-x86_64.tar.bz2 | tar jxf -
          echo `pwd` >> $GITHUB_PATH

      - name: Test coverage
        run: |
          CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}"
          ./tools/coverage.sh codecov_io


  web_client_build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -yq libssl-dev openssl protobuf-compiler

          curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1/wasm-pack-v0.9.1-x86_64-unknown-linux-musl.tar.gz | tar zxf -
          mv wasm-pack*/wasm-pack .
          echo `pwd` >> $GITHUB_PATH

          sudo npm install -g yarn

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v1

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/.wasm-pack
          key: ${{ runner.os }}-wasm-pack
          restore-keys: |
            ${{ runner.os }}-wasm-pack

      - name: Build client
        run: |
          cd $GITHUB_WORKSPACE
          yarn build_dev

      - name: Build example project
        run: |
          cd $GITHUB_WORKSPACE/examples/web
          npm install
          npm run build


  ios_client_build:
    runs-on: macOS-latest # See https://github.com/actions/virtual-environments/blob/main/images/macos for versions
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: Swatinem/rust-cache@v1

      - name: Install dependencies
        run: |
          brew install swift-protobuf
          rustup target add aarch64-apple-ios x86_64-apple-ios # actions-rs don't support multiple targets: https://github.com/actions-rs/toolchain/issues/16
          cargo install cargo-lipo

      - name: Build client & pod
        run: |
          cd $GITHUB_WORKSPACE/clients/ios
          ./tools/generate.sh
          ./tools/build.sh

          cd $GITHUB_WORKSPACE/
          pod lib lint --verbose --allow-warnings

      - name: Build example project
        run: |
          cd $GITHUB_WORKSPACE/examples/ios
          pod install
          xcodebuild -workspace ExamplesIos.xcworkspace -scheme ExamplesIos -destination "generic/platform=iOS" CODE_SIGNING_ALLOWED=NO 


  markdown_links_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
