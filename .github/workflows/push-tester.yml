name: Push tester

on: [push]

jobs:
  test_and_check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Rust & Tools
        run: |
          set -e

          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -c rustfmt clippy
          export PATH=$PATH:$HOME/.cargo/bin:/usr/local/cargo/bin
          rustup update
          rustc --version && cargo --version

      - name: Check & test
        run: |
          set -e
          export PATH=$PATH:$HOME/.cargo/bin:/usr/local/cargo/bin
          export RUST_BACKTRACE=1

          cargo fmt --all -- --check
          cargo check --all
          cargo clean -p exocore-common
          cargo clippy --all -- -D clippy::all

          cargo test --all --all-features -- --test-threads=1

  wasm_build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:19.04 # required for clang with wasm

    steps:
      - uses: actions/checkout@v1

      - name: Install Rust & Tools
        run: |
          set -e

          apt update && apt install -y clang curl

          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -c rustfmt clippy -t wasm32-unknown-unknown
          export PATH=$PATH:$HOME/.cargo/bin:/usr/local/cargo/bin
          rustup update
          rustc --version && cargo --version

      - name: Check & test
        run: |
          set -e
          export PATH=$PATH:$HOME/.cargo/bin:/usr/local/cargo/bin
          export RUST_BACKTRACE=1

          cd $GITHUB_WORKSPACE
          cargo build -p exocore-client-wasm --target "wasm32-unknown-unknown"

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install Rust & Dependencies
        run: |
          set -e

          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -c rustfmt clippy
          export PATH=$PATH:$HOME/.cargo/bin:/usr/local/cargo/bin
          rustup update
          rustc --version && cargo --version
          rustup toolchain install nightly-2019-11-14 # if changed, change in coverage.sh

      - name: Check & test
        run: |
          set -e
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
          export PATH=$PATH:`pwd`
          export RUST_BACKTRACE=1

          export CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}
          ./utils/coverage.sh codecov_io
